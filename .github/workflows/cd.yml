# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ experimental/continuous-deployment ]
  pull_request:
    branches: [ experimental/continuous-deployment ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: |
        mvn clean package --file pom.xml
        mkdir staging && cp target/*.jar staging
        ls
      working-directory: ./apps/java-api
    - uses: actions/upload-artifact@v2
      with:
        name: Package
        path: ./apps/java-api/staging      
    - uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.KEY }}
        source: "./apps/java-api/staging/*.jar"
        target: "deployment"
        strip_components: 3
        
    - name: multiple command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        envs: ${{ secrets.URL }}
        script: |
          cd deployment
          env
          jar_file=$( ls | grep .jar )
          pid=$( ps -ef | grep  'java -jar' | grep $jar_file | awk '{print $2}' )
          kill $pid
          nohup java -jar $jar_file &